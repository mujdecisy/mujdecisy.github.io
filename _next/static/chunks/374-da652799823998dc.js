"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[374],{2997:function(e,r,a){a.d(r,{fd:function(){return i}}),a(568);var i=JSON.parse('[{"title":"ACID Prensipleri","date":"2024-05-08","summary":"ACID (Atomicity, Consistency, Isolation, Durability) Prensipleri nedir? ACID Prensiplerinin ger\xe7ek hayattaki kullanım \xf6rnekleri.","body":{"raw":"\\n# ACID Prensipleri\\n\\nACID (Atomicity, Consistency, Isolation, Durability), veritabanı y\xf6netim sistemlerinde veri b\xfct\xfcnl\xfcğ\xfcn\xfc sağlamak i\xe7in kullanılan d\xf6rt temel prensiptir. Bu prensipler, işlemlerin g\xfcvenilirliğini ve veri b\xfct\xfcnl\xfcğ\xfcn\xfc korumak i\xe7in tasarlanmıştır.\\n\\n## *Atomiklik (Atomicity)*\\nİşlemlerin tamamı veya hi\xe7biri ger\xe7ekleşir. Bir işlem, herhangi bir nedenle yarıda kesilirse, başladığı duruma geri d\xf6ner (Rollback) ve değişiklikleri geri alır.\\n\\nBanka işlemleri, bu prensibi iyi bir \xf6rnek oluşturur. Bir kullanıcı bir hesaptan para transfer etmeye \xe7alışıyorsa, işlem ya tamamıyla ger\xe7ekleşir ve paranın bir hesaptan diğerine ge\xe7işi tamamlanır ya da hi\xe7 ger\xe7ekleşmez. \xd6rneğin, hesaptan para \xe7ekilirken bir hata olursa, işlem tamamen geri alınır ve hesaplar başlangı\xe7 durumuna d\xf6ner.\\n\\n## *Tutarlılık (Consistency)*\\nİşlem sonrası veritabanı her zaman tutarlı bir durumda kalır. Yapılan işlem, veritabanının b\xfct\xfcnl\xfcğ\xfcn\xfc bozmaz veya tutarsız hale getirmez.\\n\\nE-ticaret platformları, bu prensibi uygular. Bir kullanıcı bir \xfcr\xfcn\xfc sepete ekler ve \xf6deme yapar, veritabanında \xfcr\xfcn\xfcn stok durumu azalır. Bu, tutarlılık gereksinimini yerine getirir. Aynı \xfcr\xfcn\xfc bir başkası aynı anda satın almaya \xe7alışsa bile stok negatif olmamalıdır.\\n\\n## *İzolasyon (Isolation)*\\nEşzamanlı işlemler birbirinden bağımsızdır. Bir işlem, diğer işlemleri etkileyemez veya diğer işlemler tarafından etkilenemez.\\n\\nOnline rezervasyon sistemleri, izolasyon prensibini kullanır. Bir otel odası rezervasyonu yapmaya \xe7alışan iki kullanıcı aynı anda aynı odayı rezerve etmeye \xe7alışsa bile, her rezervasyon işlemi diğerinden bağımsız olarak işlenir. İki kullanıcının aynı odayı rezerve etmesini engellemek i\xe7in izolasyon sağlanır.\\n\\n## *Dayanıklılık (Durability)*\\nİşlem sonrası yapılan değişikliklerin kalıcı olması gerekmektedir. Veri, sistem \xe7\xf6kmesi veya başka bir felaket durumu olsa bile kaybolmamalıdır.\\n\\nSosyal medya platformları, dayanıklılık prensibini uygular. Kullanıcılar fotoğrafları, paylaşımları ve verileri y\xfckler. Bu veriler veritabanında saklanır ve kullanıcılar bu verilere istediği zaman erişebilir. Verilerin kalıcı olması, kullanıcıların verilere her zaman erişebilmesini sağlar, hatta sistem arızaları veya g\xfcncellemeleri sonrasında bile.\\n","code":"var Component=(()=>{var k=Object.create;var l=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var c=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var h=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),p=(i,e)=>{for(var r in e)l(i,r,{get:e[r],enumerable:!0})},s=(i,e,r,t)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let n of u(e))!b.call(i,n)&&n!==r&&l(i,n,{get:()=>e[n],enumerable:!(t=y(e,n))||t.enumerable});return i};var v=(i,e,r)=>(r=i!=null?k(c(i)):{},s(e||!i||!i.__esModule?l(r,\\"default\\",{value:i,enumerable:!0}):r,i)),g=i=>s(l({},\\"__esModule\\",{value:!0}),i);var o=h((x,m)=>{m.exports=_jsx_runtime});var A={};p(A,{default:()=>D,frontmatter:()=>z});var a=v(o()),z={title:\\"ACID Prensipleri\\",date:new Date(17151264e5),summary:\\"ACID (Atomicity, Consistency, Isolation, Durability) Prensipleri nedir? ACID Prensiplerinin ger\\\\xE7ek hayattaki kullan\\\\u0131m \\\\xF6rnekleri.\\"};function d(i){let e=Object.assign({h1:\\"h1\\",p:\\"p\\",h2:\\"h2\\",em:\\"em\\"},i.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{children:\\"ACID Prensipleri\\"}),`\\n`,(0,a.jsx)(e.p,{children:\\"ACID (Atomicity, Consistency, Isolation, Durability), veritaban\\\\u0131 y\\\\xF6netim sistemlerinde veri b\\\\xFCt\\\\xFCnl\\\\xFC\\\\u011F\\\\xFCn\\\\xFC sa\\\\u011Flamak i\\\\xE7in kullan\\\\u0131lan d\\\\xF6rt temel prensiptir. Bu prensipler, i\\\\u015Flemlerin g\\\\xFCvenilirli\\\\u011Fini ve veri b\\\\xFCt\\\\xFCnl\\\\xFC\\\\u011F\\\\xFCn\\\\xFC korumak i\\\\xE7in tasarlanm\\\\u0131\\\\u015Ft\\\\u0131r.\\"}),`\\n`,(0,a.jsx)(e.h2,{children:(0,a.jsx)(e.em,{children:\\"Atomiklik (Atomicity)\\"})}),`\\n`,(0,a.jsx)(e.p,{children:\\"\\\\u0130\\\\u015Flemlerin tamam\\\\u0131 veya hi\\\\xE7biri ger\\\\xE7ekle\\\\u015Fir. Bir i\\\\u015Flem, herhangi bir nedenle yar\\\\u0131da kesilirse, ba\\\\u015Flad\\\\u0131\\\\u011F\\\\u0131 duruma geri d\\\\xF6ner (Rollback) ve de\\\\u011Fi\\\\u015Fiklikleri geri al\\\\u0131r.\\"}),`\\n`,(0,a.jsx)(e.p,{children:\\"Banka i\\\\u015Flemleri, bu prensibi iyi bir \\\\xF6rnek olu\\\\u015Fturur. Bir kullan\\\\u0131c\\\\u0131 bir hesaptan para transfer etmeye \\\\xE7al\\\\u0131\\\\u015F\\\\u0131yorsa, i\\\\u015Flem ya tamam\\\\u0131yla ger\\\\xE7ekle\\\\u015Fir ve paran\\\\u0131n bir hesaptan di\\\\u011Ferine ge\\\\xE7i\\\\u015Fi tamamlan\\\\u0131r ya da hi\\\\xE7 ger\\\\xE7ekle\\\\u015Fmez. \\\\xD6rne\\\\u011Fin, hesaptan para \\\\xE7ekilirken bir hata olursa, i\\\\u015Flem tamamen geri al\\\\u0131n\\\\u0131r ve hesaplar ba\\\\u015Flang\\\\u0131\\\\xE7 durumuna d\\\\xF6ner.\\"}),`\\n`,(0,a.jsx)(e.h2,{children:(0,a.jsx)(e.em,{children:\\"Tutarl\\\\u0131l\\\\u0131k (Consistency)\\"})}),`\\n`,(0,a.jsx)(e.p,{children:\\"\\\\u0130\\\\u015Flem sonras\\\\u0131 veritaban\\\\u0131 her zaman tutarl\\\\u0131 bir durumda kal\\\\u0131r. Yap\\\\u0131lan i\\\\u015Flem, veritaban\\\\u0131n\\\\u0131n b\\\\xFCt\\\\xFCnl\\\\xFC\\\\u011F\\\\xFCn\\\\xFC bozmaz veya tutars\\\\u0131z hale getirmez.\\"}),`\\n`,(0,a.jsx)(e.p,{children:\\"E-ticaret platformlar\\\\u0131, bu prensibi uygular. Bir kullan\\\\u0131c\\\\u0131 bir \\\\xFCr\\\\xFCn\\\\xFC sepete ekler ve \\\\xF6deme yapar, veritaban\\\\u0131nda \\\\xFCr\\\\xFCn\\\\xFCn stok durumu azal\\\\u0131r. Bu, tutarl\\\\u0131l\\\\u0131k gereksinimini yerine getirir. Ayn\\\\u0131 \\\\xFCr\\\\xFCn\\\\xFC bir ba\\\\u015Fkas\\\\u0131 ayn\\\\u0131 anda sat\\\\u0131n almaya \\\\xE7al\\\\u0131\\\\u015Fsa bile stok negatif olmamal\\\\u0131d\\\\u0131r.\\"}),`\\n`,(0,a.jsx)(e.h2,{children:(0,a.jsx)(e.em,{children:\\"\\\\u0130zolasyon (Isolation)\\"})}),`\\n`,(0,a.jsx)(e.p,{children:\\"E\\\\u015Fzamanl\\\\u0131 i\\\\u015Flemler birbirinden ba\\\\u011F\\\\u0131ms\\\\u0131zd\\\\u0131r. Bir i\\\\u015Flem, di\\\\u011Fer i\\\\u015Flemleri etkileyemez veya di\\\\u011Fer i\\\\u015Flemler taraf\\\\u0131ndan etkilenemez.\\"}),`\\n`,(0,a.jsx)(e.p,{children:\\"Online rezervasyon sistemleri, izolasyon prensibini kullan\\\\u0131r. Bir otel odas\\\\u0131 rezervasyonu yapmaya \\\\xE7al\\\\u0131\\\\u015Fan iki kullan\\\\u0131c\\\\u0131 ayn\\\\u0131 anda ayn\\\\u0131 oday\\\\u0131 rezerve etmeye \\\\xE7al\\\\u0131\\\\u015Fsa bile, her rezervasyon i\\\\u015Flemi di\\\\u011Ferinden ba\\\\u011F\\\\u0131ms\\\\u0131z olarak i\\\\u015Flenir. \\\\u0130ki kullan\\\\u0131c\\\\u0131n\\\\u0131n ayn\\\\u0131 oday\\\\u0131 rezerve etmesini engellemek i\\\\xE7in izolasyon sa\\\\u011Flan\\\\u0131r.\\"}),`\\n`,(0,a.jsx)(e.h2,{children:(0,a.jsx)(e.em,{children:\\"Dayan\\\\u0131kl\\\\u0131l\\\\u0131k (Durability)\\"})}),`\\n`,(0,a.jsx)(e.p,{children:\\"\\\\u0130\\\\u015Flem sonras\\\\u0131 yap\\\\u0131lan de\\\\u011Fi\\\\u015Fikliklerin kal\\\\u0131c\\\\u0131 olmas\\\\u0131 gerekmektedir. Veri, sistem \\\\xE7\\\\xF6kmesi veya ba\\\\u015Fka bir felaket durumu olsa bile kaybolmamal\\\\u0131d\\\\u0131r.\\"}),`\\n`,(0,a.jsx)(e.p,{children:\\"Sosyal medya platformlar\\\\u0131, dayan\\\\u0131kl\\\\u0131l\\\\u0131k prensibini uygular. Kullan\\\\u0131c\\\\u0131lar foto\\\\u011Fraflar\\\\u0131, payla\\\\u015F\\\\u0131mlar\\\\u0131 ve verileri y\\\\xFCkler. Bu veriler veritaban\\\\u0131nda saklan\\\\u0131r ve kullan\\\\u0131c\\\\u0131lar bu verilere istedi\\\\u011Fi zaman eri\\\\u015Febilir. Verilerin kal\\\\u0131c\\\\u0131 olmas\\\\u0131, kullan\\\\u0131c\\\\u0131lar\\\\u0131n verilere her zaman eri\\\\u015Febilmesini sa\\\\u011Flar, hatta sistem ar\\\\u0131zalar\\\\u0131 veya g\\\\xFCncellemeleri sonras\\\\u0131nda bile.\\"})]})}function f(i={}){let{wrapper:e}=i.components||{};return e?(0,a.jsx)(e,Object.assign({},i,{children:(0,a.jsx)(d,i)})):d(i)}var D=f;return g(A);})();\\n;return Component;"},"_id":"acid.mdx","_raw":{"sourceFilePath":"acid.mdx","sourceFileName":"acid.mdx","sourceFileDir":".","contentType":"mdx","flattenedPath":"acid"},"type":"Post","url":"/posts/acid"},{"title":"Async vs Thread vs Process","date":"2024-05-07","summary":"Asenkron işlem, Thread ve Process arasındaki farklar ve kullanım alanları. Asenkron işlem, Thread ve Process \xf6rnekleri.","body":{"raw":"\\n# Asenkron İşlem\\n\\n{props.rdrImg(\\n    \\"/content-images/async-thread-process.png\\",\\n    \\"\\"\\n)}\\n\\n## *Asenkron İşlem (Asynchronous Processing)*\\nAsenkron işlem, işlemlerin sırayla tamamlanması yerine işlemlerin sırasız bir şekilde y\xfcr\xfct\xfcld\xfcğ\xfc bir programlama yaklaşımıdır. Genellikle olaylar (events) veya iş par\xe7acıkları (threads) arasında iletişim kurarken kullanılır. Bu, uzun s\xfcren işlemlerin başlatılmasına izin verirken ana iş akışının kesilmesini \xf6nler.\\n\\n**\xd6rnek:** Bir web tarayıcısının sayfa y\xfckleme işlemi. Tarayıcı, sayfayı y\xfcklerken kullanıcı aray\xfcz\xfcn\xfcn donmasını \xf6nlemek i\xe7in asenkron işlemler kullanır.\\n\\n## *\xc7oklu İş Par\xe7acığı (Multithreading)*\\n\xc7oklu iş par\xe7acığı, aynı program i\xe7inde birden fazla iş par\xe7acığının (thread) aynı anda \xe7alıştığı bir yaklaşımdır. Her iş par\xe7acığı farklı bir g\xf6revi y\xfcr\xfctebilir ve işletim sistemi bu iş par\xe7acıklarını zaman dilimleri halinde sırayla \xe7alıştırır. Bu, paralel işlem yapmanın bir yoludur ve paylaşılan kaynaklara erişimi y\xf6netmek zor olabilir.\\n\\n**\xd6rnek:** Bir medya oynatıcısının aynı anda sesi \xe7almak ve kullanıcı aray\xfcz\xfcn\xfc g\xfcncellemek i\xe7in farklı iş par\xe7acıkları kullanması.\\n\\n## *\xc7oklu İşlem (Multiprocessing)*\\n\xc7oklu işlem, birden fazla işlemcinin veya \xe7ekirdeğin (CPU) kullanıldığı bir paralel işlem yaklaşımıdır. Her işlemci kendi bellek alanına sahiptir ve ayrı bir işlemi y\xfcr\xfctebilir. Bu, daha b\xfcy\xfck işlem y\xfcklerini paralel olarak işlemek i\xe7in kullanılır ve işletim sistemi tarafından y\xf6netilen bağımsız işlemlerdir.\\n\\n**\xd6rnek:** Bir sunucunun aynı anda birden fazla istemciye hizmet vermesi. Her istemci kendi işlemci kaynaklarını kullanarak işlemlerini ger\xe7ekleştirir.\\n\\n\xd6zetle, asenkron işlem, olaylar arasında ge\xe7iş yapmak i\xe7in kullanılırken, \xe7oklu iş par\xe7acığı aynı program i\xe7inde farklı g\xf6revleri aynı anda \xe7alıştırmak i\xe7in ve \xe7oklu işlem ise birden fazla işlemci kullanarak b\xfcy\xfck iş y\xfcklerini işlemek i\xe7in kullanılır.","code":"var Component=(()=>{var d=Object.create;var l=Object.defineProperty;var o=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var p=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),b=(a,e)=>{for(var r in e)l(a,r,{get:e[r],enumerable:!0})},m=(a,e,r,s)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let i of y(e))!h.call(a,i)&&i!==r&&l(a,i,{get:()=>e[i],enumerable:!(s=o(e,i))||s.enumerable});return a};var g=(a,e,r)=>(r=a!=null?d(u(a)):{},m(e||!a||!a.__esModule?l(r,\\"default\\",{value:a,enumerable:!0}):r,a)),v=a=>m(l({},\\"__esModule\\",{value:!0}),a);var t=p((_,k)=>{k.exports=_jsx_runtime});var j={};b(j,{default:()=>x,frontmatter:()=>f});var n=g(t()),f={title:\\"Async vs Thread vs Process\\",date:new Date(171504e7),summary:\\"Asenkron i\\\\u015Flem, Thread ve Process aras\\\\u0131ndaki farklar ve kullan\\\\u0131m alanlar\\\\u0131. Asenkron i\\\\u015Flem, Thread ve Process \\\\xF6rnekleri.\\"};function c(a){let e=Object.assign({h1:\\"h1\\",h2:\\"h2\\",em:\\"em\\",p:\\"p\\",strong:\\"strong\\"},a.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\\"Asenkron \\\\u0130\\\\u015Flem\\"}),`\\n`,a.rdrImg(\\"/content-images/async-thread-process.png\\",\\"\\"),`\\n`,(0,n.jsx)(e.h2,{children:(0,n.jsx)(e.em,{children:\\"Asenkron \\\\u0130\\\\u015Flem (Asynchronous Processing)\\"})}),`\\n`,(0,n.jsx)(e.p,{children:\\"Asenkron i\\\\u015Flem, i\\\\u015Flemlerin s\\\\u0131rayla tamamlanmas\\\\u0131 yerine i\\\\u015Flemlerin s\\\\u0131ras\\\\u0131z bir \\\\u015Fekilde y\\\\xFCr\\\\xFCt\\\\xFCld\\\\xFC\\\\u011F\\\\xFC bir programlama yakla\\\\u015F\\\\u0131m\\\\u0131d\\\\u0131r. Genellikle olaylar (events) veya i\\\\u015F par\\\\xE7ac\\\\u0131klar\\\\u0131 (threads) aras\\\\u0131nda ileti\\\\u015Fim kurarken kullan\\\\u0131l\\\\u0131r. Bu, uzun s\\\\xFCren i\\\\u015Flemlerin ba\\\\u015Flat\\\\u0131lmas\\\\u0131na izin verirken ana i\\\\u015F ak\\\\u0131\\\\u015F\\\\u0131n\\\\u0131n kesilmesini \\\\xF6nler.\\"}),`\\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\\"\\\\xD6rnek:\\"}),\\" Bir web taray\\\\u0131c\\\\u0131s\\\\u0131n\\\\u0131n sayfa y\\\\xFCkleme i\\\\u015Flemi. Taray\\\\u0131c\\\\u0131, sayfay\\\\u0131 y\\\\xFCklerken kullan\\\\u0131c\\\\u0131 aray\\\\xFCz\\\\xFCn\\\\xFCn donmas\\\\u0131n\\\\u0131 \\\\xF6nlemek i\\\\xE7in asenkron i\\\\u015Flemler kullan\\\\u0131r.\\"]}),`\\n`,(0,n.jsx)(e.h2,{children:(0,n.jsx)(e.em,{children:\\"\\\\xC7oklu \\\\u0130\\\\u015F Par\\\\xE7ac\\\\u0131\\\\u011F\\\\u0131 (Multithreading)\\"})}),`\\n`,(0,n.jsx)(e.p,{children:\\"\\\\xC7oklu i\\\\u015F par\\\\xE7ac\\\\u0131\\\\u011F\\\\u0131, ayn\\\\u0131 program i\\\\xE7inde birden fazla i\\\\u015F par\\\\xE7ac\\\\u0131\\\\u011F\\\\u0131n\\\\u0131n (thread) ayn\\\\u0131 anda \\\\xE7al\\\\u0131\\\\u015Ft\\\\u0131\\\\u011F\\\\u0131 bir yakla\\\\u015F\\\\u0131md\\\\u0131r. Her i\\\\u015F par\\\\xE7ac\\\\u0131\\\\u011F\\\\u0131 farkl\\\\u0131 bir g\\\\xF6revi y\\\\xFCr\\\\xFCtebilir ve i\\\\u015Fletim sistemi bu i\\\\u015F par\\\\xE7ac\\\\u0131klar\\\\u0131n\\\\u0131 zaman dilimleri halinde s\\\\u0131rayla \\\\xE7al\\\\u0131\\\\u015Ft\\\\u0131r\\\\u0131r. Bu, paralel i\\\\u015Flem yapman\\\\u0131n bir yoludur ve payla\\\\u015F\\\\u0131lan kaynaklara eri\\\\u015Fimi y\\\\xF6netmek zor olabilir.\\"}),`\\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\\"\\\\xD6rnek:\\"}),\\" Bir medya oynat\\\\u0131c\\\\u0131s\\\\u0131n\\\\u0131n ayn\\\\u0131 anda sesi \\\\xE7almak ve kullan\\\\u0131c\\\\u0131 aray\\\\xFCz\\\\xFCn\\\\xFC g\\\\xFCncellemek i\\\\xE7in farkl\\\\u0131 i\\\\u015F par\\\\xE7ac\\\\u0131klar\\\\u0131 kullanmas\\\\u0131.\\"]}),`\\n`,(0,n.jsx)(e.h2,{children:(0,n.jsx)(e.em,{children:\\"\\\\xC7oklu \\\\u0130\\\\u015Flem (Multiprocessing)\\"})}),`\\n`,(0,n.jsx)(e.p,{children:\\"\\\\xC7oklu i\\\\u015Flem, birden fazla i\\\\u015Flemcinin veya \\\\xE7ekirde\\\\u011Fin (CPU) kullan\\\\u0131ld\\\\u0131\\\\u011F\\\\u0131 bir paralel i\\\\u015Flem yakla\\\\u015F\\\\u0131m\\\\u0131d\\\\u0131r. Her i\\\\u015Flemci kendi bellek alan\\\\u0131na sahiptir ve ayr\\\\u0131 bir i\\\\u015Flemi y\\\\xFCr\\\\xFCtebilir. Bu, daha b\\\\xFCy\\\\xFCk i\\\\u015Flem y\\\\xFCklerini paralel olarak i\\\\u015Flemek i\\\\xE7in kullan\\\\u0131l\\\\u0131r ve i\\\\u015Fletim sistemi taraf\\\\u0131ndan y\\\\xF6netilen ba\\\\u011F\\\\u0131ms\\\\u0131z i\\\\u015Flemlerdir.\\"}),`\\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\\"\\\\xD6rnek:\\"}),\\" Bir sunucunun ayn\\\\u0131 anda birden fazla istemciye hizmet vermesi. Her istemci kendi i\\\\u015Flemci kaynaklar\\\\u0131n\\\\u0131 kullanarak i\\\\u015Flemlerini ger\\\\xE7ekle\\\\u015Ftirir.\\"]}),`\\n`,(0,n.jsx)(e.p,{children:\\"\\\\xD6zetle, asenkron i\\\\u015Flem, olaylar aras\\\\u0131nda ge\\\\xE7i\\\\u015F yapmak i\\\\xE7in kullan\\\\u0131l\\\\u0131rken, \\\\xE7oklu i\\\\u015F par\\\\xE7ac\\\\u0131\\\\u011F\\\\u0131 ayn\\\\u0131 program i\\\\xE7inde farkl\\\\u0131 g\\\\xF6revleri ayn\\\\u0131 anda \\\\xE7al\\\\u0131\\\\u015Ft\\\\u0131rmak i\\\\xE7in ve \\\\xE7oklu i\\\\u015Flem ise birden fazla i\\\\u015Flemci kullanarak b\\\\xFCy\\\\xFCk i\\\\u015F y\\\\xFCklerini i\\\\u015Flemek i\\\\xE7in kullan\\\\u0131l\\\\u0131r.\\"})]})}function z(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,Object.assign({},a,{children:(0,n.jsx)(c,a)})):c(a)}var x=z;return v(j);})();\\n;return Component;"},"_id":"async-thread-process.mdx","_raw":{"sourceFilePath":"async-thread-process.mdx","sourceFileName":"async-thread-process.mdx","sourceFileDir":".","contentType":"mdx","flattenedPath":"async-thread-process"},"type":"Post","url":"/posts/async-thread-process"},{"title":"CAP Teoremi","date":"2024-05-06","summary":"CAP(Consistency, Availability, Partition Tolerance) Teoremi Nedir? CAP Teoreminin \xf6rneklerle a\xe7ıklamaları. CA, CP ve AP sistemleri","body":{"raw":"\\n# CAP Teoremi\\n\\n{props.rdrImg(\\"/content-images/cap.png\\", \\"CAP Teoremi\\")}\\n\\nBu teoreme g\xf6re, bir dağıtık sistem en fazla iki \xf6zelliği sağlayabilir; \xfc\xe7\xfcn\xfc birden sağlamak m\xfcmk\xfcn değildir.\\n* Tutarlılık (Consistency): Her istek sonucunda sistemdeki t\xfcm d\xfcğ\xfcmlerin aynı veriyi d\xf6nd\xfcrmesi demektir. Yani, verilerin herhangi bir zamanda her d\xfcğ\xfcmde aynı durumda olmasıdır.\\n* Erişilebilirlik (Availability): Her istek i\xe7in sistemdeki d\xfcğ\xfcmlerden en az birinin başarılı bir şekilde yanıt vermesi demektir. Yani, sistem herhangi bir zamanda \xe7alışır durumda olmasıdır.\\n* B\xf6l\xfcnme Toleransı (Partition Tolerance): Sistemdeki d\xfcğ\xfcmler arasında oluşabilecek ağ problemleri ve aksaklıklara karşı diren\xe7li olmasıdır. Yani, sistem herhangi bir zamanda bileşenleri arasında oluşabilecek aksaklıkların \xfcstesinden gelebilmesidir.\\n\\n## Kullanım \xd6rnekleri\\n\\n### *CA (Consistency ve Availability)*\\n**Banka M\xfcşteri Bilgi Sistemi**\\n\\nBankalar, m\xfcşteri bilgilerinin her zaman kesinlikle doğru ve g\xfcncel tutulmasını gerektirir. Bu nedenle, tutarlılık ve erişilebilirlik bu projede \xf6nceliklidir. Tutarlılık sağlamak i\xe7in, herhangi bir işlem tamamlandığında m\xfcşteri bilgileri anında g\xfcncellenir ve t\xfcm banka şubeleri ve ATM\'ler arasında konsolide edilir. Erişilebilirlik ise m\xfcşterilerin her zaman hesaplarına erişebilmelerini sağlar.\\nPartition Tolarance feragat ederek sisteminizin tutarlı ve erişilebilir olması gereken durumlar i\xe7in se\xe7ilir. Nodelar arası iletişim kaybolduğunda ise bunu tolere edemez.\\nVerilerin doğruluğunun garanti edilmesini istediğimiz durumlarda uygundur. (İlişkisel databaseler, transactional işlemler)\\n\\n\xd6rnek Teknoloji: Microsoft Sql Server\\n\\n### *CP (Consistency ve Partition Tolerance):*\\n**Akıllı Tedarik Zinciri Y\xf6netimi**\\n\\nTedarik zinciri y\xf6netimi, envanter y\xf6netimi ve lojistik s\xfcre\xe7lerin tutarlılık gereksinimleri y\xfcksektir. Ağ b\xf6l\xfcnmesi durumunda bile, envanterin doğru bir şekilde y\xf6netilmesi ve envanterin kaybolmaması kritiktir. Bu projede, tutarlılık \xf6nceliklidir, ancak ağ b\xf6l\xfcnmesi durumunda bazı depo veya şube sistemlerine erişim kesilebilir.\\nVeri yazmak \xfczerine kurulu iş modelleri i\xe7in uygundur. (Uygulama logları)\\n\\n\xd6rnek Teknoloji : Redis\\n\\n\\n### *AP (Availability ve Partition Tolerance):*\\n**Sosyal Medya Uygulaması**\\n\\nSosyal medya uygulamaları, kullanıcıların i\xe7eriklerini hızlı bir şekilde paylaşmalarını ve g\xf6rmelerini gerektirir. Bu projede, erişilebilirlik ve kullanıcı deneyimi \xf6nceliklidir. Ağ b\xf6l\xfcnmesi durumunda bile kullanıcıların i\xe7eriklere erişebilmeleri ve paylaşabilmeleri \xf6nemlidir. Bu nedenle, tutarlılık riski alınabilir.\\n\\n\xd6rnek Teknoloji: Cassandra\\n","code":"var Component=(()=>{var o=Object.create;var a=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var c=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var g=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),y=(r,e)=>{for(var n in e)a(r,n,{get:e[n],enumerable:!0})},d=(r,e,n,t)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let l of c(e))!b.call(r,l)&&l!==n&&a(r,l,{get:()=>e[l],enumerable:!(t=u(e,l))||t.enumerable});return r};var v=(r,e,n)=>(n=r!=null?o(h(r)):{},d(e||!r||!r.__esModule?a(n,\\"default\\",{value:r,enumerable:!0}):n,r)),p=r=>d(a({},\\"__esModule\\",{value:!0}),r);var s=g((P,m)=>{m.exports=_jsx_runtime});var C={};y(C,{default:()=>z,frontmatter:()=>T});var i=v(s()),T={title:\\"CAP Teoremi\\",date:new Date(17149536e5),summary:\\"CAP(Consistency, Availability, Partition Tolerance) Teoremi Nedir? CAP Teoreminin \\\\xF6rneklerle a\\\\xE7\\\\u0131klamalar\\\\u0131. CA, CP ve AP sistemleri\\"};function k(r){let e=Object.assign({h1:\\"h1\\",p:\\"p\\",ul:\\"ul\\",li:\\"li\\",h2:\\"h2\\",h3:\\"h3\\",em:\\"em\\",strong:\\"strong\\"},r.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{children:\\"CAP Teoremi\\"}),`\\n`,r.rdrImg(\\"/content-images/cap.png\\",\\"CAP Teoremi\\"),`\\n`,(0,i.jsx)(e.p,{children:\\"Bu teoreme g\\\\xF6re, bir da\\\\u011F\\\\u0131t\\\\u0131k sistem en fazla iki \\\\xF6zelli\\\\u011Fi sa\\\\u011Flayabilir; \\\\xFC\\\\xE7\\\\xFCn\\\\xFC birden sa\\\\u011Flamak m\\\\xFCmk\\\\xFCn de\\\\u011Fildir.\\"}),`\\n`,(0,i.jsxs)(e.ul,{children:[`\\n`,(0,i.jsx)(e.li,{children:\\"Tutarl\\\\u0131l\\\\u0131k (Consistency): Her istek sonucunda sistemdeki t\\\\xFCm d\\\\xFC\\\\u011F\\\\xFCmlerin ayn\\\\u0131 veriyi d\\\\xF6nd\\\\xFCrmesi demektir. Yani, verilerin herhangi bir zamanda her d\\\\xFC\\\\u011F\\\\xFCmde ayn\\\\u0131 durumda olmas\\\\u0131d\\\\u0131r.\\"}),`\\n`,(0,i.jsx)(e.li,{children:\\"Eri\\\\u015Filebilirlik (Availability): Her istek i\\\\xE7in sistemdeki d\\\\xFC\\\\u011F\\\\xFCmlerden en az birinin ba\\\\u015Far\\\\u0131l\\\\u0131 bir \\\\u015Fekilde yan\\\\u0131t vermesi demektir. Yani, sistem herhangi bir zamanda \\\\xE7al\\\\u0131\\\\u015F\\\\u0131r durumda olmas\\\\u0131d\\\\u0131r.\\"}),`\\n`,(0,i.jsx)(e.li,{children:\\"B\\\\xF6l\\\\xFCnme Tolerans\\\\u0131 (Partition Tolerance): Sistemdeki d\\\\xFC\\\\u011F\\\\xFCmler aras\\\\u0131nda olu\\\\u015Fabilecek a\\\\u011F problemleri ve aksakl\\\\u0131klara kar\\\\u015F\\\\u0131 diren\\\\xE7li olmas\\\\u0131d\\\\u0131r. Yani, sistem herhangi bir zamanda bile\\\\u015Fenleri aras\\\\u0131nda olu\\\\u015Fabilecek aksakl\\\\u0131klar\\\\u0131n \\\\xFCstesinden gelebilmesidir.\\"}),`\\n`]}),`\\n`,(0,i.jsx)(e.h2,{children:\\"Kullan\\\\u0131m \\\\xD6rnekleri\\"}),`\\n`,(0,i.jsx)(e.h3,{children:(0,i.jsx)(e.em,{children:\\"CA (Consistency ve Availability)\\"})}),`\\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:\\"Banka M\\\\xFC\\\\u015Fteri Bilgi Sistemi\\"})}),`\\n`,(0,i.jsx)(e.p,{children:`Bankalar, m\\\\xFC\\\\u015Fteri bilgilerinin her zaman kesinlikle do\\\\u011Fru ve g\\\\xFCncel tutulmas\\\\u0131n\\\\u0131 gerektirir. Bu nedenle, tutarl\\\\u0131l\\\\u0131k ve eri\\\\u015Filebilirlik bu projede \\\\xF6nceliklidir. Tutarl\\\\u0131l\\\\u0131k sa\\\\u011Flamak i\\\\xE7in, herhangi bir i\\\\u015Flem tamamland\\\\u0131\\\\u011F\\\\u0131nda m\\\\xFC\\\\u015Fteri bilgileri an\\\\u0131nda g\\\\xFCncellenir ve t\\\\xFCm banka \\\\u015Fubeleri ve ATM\'ler aras\\\\u0131nda konsolide edilir. Eri\\\\u015Filebilirlik ise m\\\\xFC\\\\u015Fterilerin her zaman hesaplar\\\\u0131na eri\\\\u015Febilmelerini sa\\\\u011Flar.\\nPartition Tolarance feragat ederek sisteminizin tutarl\\\\u0131 ve eri\\\\u015Filebilir olmas\\\\u0131 gereken durumlar i\\\\xE7in se\\\\xE7ilir. Nodelar aras\\\\u0131 ileti\\\\u015Fim kayboldu\\\\u011Funda ise bunu tolere edemez.\\nVerilerin do\\\\u011Frulu\\\\u011Funun garanti edilmesini istedi\\\\u011Fimiz durumlarda uygundur. (\\\\u0130li\\\\u015Fkisel databaseler, transactional i\\\\u015Flemler)`}),`\\n`,(0,i.jsx)(e.p,{children:\\"\\\\xD6rnek Teknoloji: Microsoft Sql Server\\"}),`\\n`,(0,i.jsx)(e.h3,{children:(0,i.jsx)(e.em,{children:\\"CP (Consistency ve Partition Tolerance):\\"})}),`\\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:\\"Ak\\\\u0131ll\\\\u0131 Tedarik Zinciri Y\\\\xF6netimi\\"})}),`\\n`,(0,i.jsx)(e.p,{children:`Tedarik zinciri y\\\\xF6netimi, envanter y\\\\xF6netimi ve lojistik s\\\\xFCre\\\\xE7lerin tutarl\\\\u0131l\\\\u0131k gereksinimleri y\\\\xFCksektir. A\\\\u011F b\\\\xF6l\\\\xFCnmesi durumunda bile, envanterin do\\\\u011Fru bir \\\\u015Fekilde y\\\\xF6netilmesi ve envanterin kaybolmamas\\\\u0131 kritiktir. Bu projede, tutarl\\\\u0131l\\\\u0131k \\\\xF6nceliklidir, ancak a\\\\u011F b\\\\xF6l\\\\xFCnmesi durumunda baz\\\\u0131 depo veya \\\\u015Fube sistemlerine eri\\\\u015Fim kesilebilir.\\nVeri yazmak \\\\xFCzerine kurulu i\\\\u015F modelleri i\\\\xE7in uygundur. (Uygulama loglar\\\\u0131)`}),`\\n`,(0,i.jsx)(e.p,{children:\\"\\\\xD6rnek Teknoloji : Redis\\"}),`\\n`,(0,i.jsx)(e.h3,{children:(0,i.jsx)(e.em,{children:\\"AP (Availability ve Partition Tolerance):\\"})}),`\\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:\\"Sosyal Medya Uygulamas\\\\u0131\\"})}),`\\n`,(0,i.jsx)(e.p,{children:\\"Sosyal medya uygulamalar\\\\u0131, kullan\\\\u0131c\\\\u0131lar\\\\u0131n i\\\\xE7eriklerini h\\\\u0131zl\\\\u0131 bir \\\\u015Fekilde payla\\\\u015Fmalar\\\\u0131n\\\\u0131 ve g\\\\xF6rmelerini gerektirir. Bu projede, eri\\\\u015Filebilirlik ve kullan\\\\u0131c\\\\u0131 deneyimi \\\\xF6nceliklidir. A\\\\u011F b\\\\xF6l\\\\xFCnmesi durumunda bile kullan\\\\u0131c\\\\u0131lar\\\\u0131n i\\\\xE7eriklere eri\\\\u015Febilmeleri ve payla\\\\u015Fabilmeleri \\\\xF6nemlidir. Bu nedenle, tutarl\\\\u0131l\\\\u0131k riski al\\\\u0131nabilir.\\"}),`\\n`,(0,i.jsx)(e.p,{children:\\"\\\\xD6rnek Teknoloji: Cassandra\\"})]})}function A(r={}){let{wrapper:e}=r.components||{};return e?(0,i.jsx)(e,Object.assign({},r,{children:(0,i.jsx)(k,r)})):k(r)}var z=A;return p(C);})();\\n;return Component;"},"_id":"cap-theorem.mdx","_raw":{"sourceFilePath":"cap-theorem.mdx","sourceFileName":"cap-theorem.mdx","sourceFileDir":".","contentType":"mdx","flattenedPath":"cap-theorem"},"type":"Post","url":"/posts/cap-theorem"},{"title":"Mikroservis Desenleri - 1","date":"2024-05-09","summary":"En \xe7ok kullanılan mikro servis desenleri ve kullanım ama\xe7ları.","body":{"raw":"\\n# Mikroservis Desenleri\\n\\n{props.rdrImg(\\n    \\"/content-images/ms-patterns-1.png\\",\\n    \\"\\"\\n)}\\n\\n## *API Gateway*\\nAPI Gateway, bir mikro hizmet mimarisi i\xe7inde bir merkezi nokta olarak hareket eder ve istemcilerin t\xfcm hizmetlerle etkileşim kurmak yerine tek bir API aracılığıyla iletişim kurmalarını sağlar. \xd6rneğin, bir e-ticaret uygulamasında, m\xfcşterilerin satın alma işlemlerini ger\xe7ekleştirmek i\xe7in \xf6deme, envanter, kargo vb. hizmetlere ihtiya\xe7ları vardır. API Gateway, m\xfcşterilerin t\xfcm bu hizmetlere tek bir API aracılığıyla erişmelerini ve satın alma işlemlerini tamamlamalarını sağlar.\\n\\n## *Service Registry*\\nHizmet kaydı, t\xfcm hizmetlerin (API\'ler, veri tabanları vb.) adlarının ve adreslerinin tutulduğu bir merkezi kaynaktır. \xd6rneğin, bir e-ticaret uygulamasında, \xf6deme hizmeti değişirse, hizmet kaydındaki ad ve adres bilgisi g\xfcncellenerek, diğer hizmetlerin \xf6deme hizmeti ile etkileşimini s\xfcrd\xfcrmesi sağlanır.\\n\\n## *Circuit Breaker*\\nCircuit Breaker, hata toleransını artırmak i\xe7in kullanılan bir tasarım desenidir. \xd6rneğin, bir bankacılık uygulamasında, para transferi hizmeti i\xe7in hata oluşursa Circuit Breaker devreye girerek, hizmeti ge\xe7ici olarak durdurur ve m\xfcşteri verilerini korur.\\n\\nCircuit Breaker pattern, bir yazılım uygulamasının hata toleransını artırmak i\xe7in kullanılan bir tasarım desenidir. Bu desen, bir hizmet \xe7ağrısı yaparken, olası hataların \xf6n\xfcne ge\xe7mek ve sistemdeki diğer hizmetleri de etkilemeden hatalı hizmet \xe7ağrısını d\xfczeltmek i\xe7in kullanılır.\\n\\nBu desen, hizmet \xe7ağrılarından \xf6nce belirli bir s\xfcre boyunca hizmet sağlayıcısına yapılan \xe7ağrı sayısını takip eder. Eğer bir hizmet sağlayıcısı belirlenen sayıda \xe7ağrıda hata verirse, Circuit Breaker devreye girerek \xe7ağrıları engeller ve sistemdeki diğer hizmetlere etki etmemesini sağlar.\\n\\nCircuit Breaker, hata sayısını belirli bir seviyenin \xfczerine \xe7ıktığında, hizmet \xe7ağrılarını otomatik olarak reddeder ve bir belirte\xe7 d\xf6nd\xfcr\xfcr. Bu belirte\xe7, uygulamanın hata sayısını belirleyebilmesini sağlar ve hata durumunda sistemdeki diğer bileşenleri korur.\\n\\n### Circuit Breaker States\\n\\n* Closed (Kapalı): İlk durumda Circuit Breaker kapalıdır ve normal hizmet \xe7ağrılarına izin verir. Hizmet sağlayıcısına yapılan \xe7ağrılar hata vermez ve Circuit Breaker a\xe7ılmaz.\\n* Open (A\xe7ık): İkinci durumda Circuit Breaker a\xe7ıktır ve hizmet \xe7ağrıları reddedilir. Bu durum, belirli bir s\xfcre boyunca hizmet sağlayıcısına yapılan \xe7ağrıların belirli bir oranda hata vermesi sonucu meydana gelir.\\n* Half-Open (Yarı A\xe7ık): \xdc\xe7\xfcnc\xfc durumda Circuit Breaker yarı a\xe7ıktır ve birka\xe7 hizmet \xe7ağrısını izin verir. Bu durumda, Circuit Breaker, bir hizmet \xe7ağrısı yaparak hizmet sağlayıcısının tekrar \xe7alışıp \xe7alışmadığını kontrol eder. Eğer hizmet \xe7ağrısı başarılı olursa, Circuit Breaker tekrar kapalı duruma ge\xe7er ve normal hizmet \xe7ağrılarına izin verir. Ancak, hizmet \xe7ağrısı başarısız olursa, Circuit Breaker tekrar a\xe7ık duruma ge\xe7er ve hizmet \xe7ağrıları reddedilir.\\n\\n## *Saga Pattern*\\nBu pattern, bir işlem zinciri boyunca birden fazla mikroservis \xe7ağrısını y\xf6netmek i\xe7in kullanılır. Saga, bir işlemi birden fazla adımda ger\xe7ekleştiren bir işlem zinciri olarak d\xfcş\xfcn\xfclebilir. Her adım, bir mikroservis \xe7ağrısını temsil eder ve hata toleransını sağlamak i\xe7in geri alma (compensation) adımları eklenir. \xd6rneğin, bir siparişin işlenmesi, bir m\xfcşteriye \xf6deme yapılması ve bir \xfcr\xfcn\xfcn sevkiyatının yapılması gibi bir\xe7ok adımdan oluşabilir.\\n\\n## *Event Sourcing Pattern*\\nBu pattern, bir uygulamada meydana gelen t\xfcm olayların bir kayıdında saklandığı bir yaklaşımdır. Bu olaylar, uygulamanın durumunu oluşturur ve her bir olay, uygulamanın ge\xe7miş durumuna dayalı olarak bir sonraki durumu etkiler. Bu pattern, bir\xe7ok işlemi ve veri g\xfcncellemesini kolaylaştırır ve hata ayıklama ve geri alma işlemlerini kolaylaştırır. \xd6rneğin, bir banka uygulamasında, bir m\xfcşterinin hesap hareketleri kaydedilebilir ve bu bilgiler, m\xfcşterinin hesap ge\xe7mişi veya raporlama i\xe7in kullanılabilir.\\n\\n## *Strangler Pattern*\\nBu desen, mevcut bir uygulamanın veya sistemin s\xfcrd\xfcr\xfclmesi veya yeniden geliştirilmesi gerektiğinde kullanılır. Temel amacı, mevcut sistemi yavaş yavaş terk ederek, yeni bir sistem veya uygulama inşa etmeyi ve eski sistem yerine kullanmayı hedefler.\\n\\n## *CQRS*\\nCommand Query Responsibility Segregation bir yazılım mimarisi desenidir. Bu desen, bir uygulamanın komutlarını (veri yazma işlemleri) ve sorgularını (veri okuma işlemleri) farklı işlemler olarak ele alarak, farklı birimlerde işlemesi fikrine dayanır.\\n\\nGeleneksel bir uygulama mimarisinde, hem veri yazma hem de veri okuma işlemleri aynı veri modeli \xfczerinde ger\xe7ekleştirilir. Bu, uygulamanın performansını olumsuz y\xf6nde etkileyebilir ve karmaşık iş mantığını zorlaştırabilir.\\n\\nCQRS yaklaşımında, veri yazma işlemleri ve veri okuma işlemleri farklı birimlerde ele alınır. Veri yazma işlemleri, veri modelinde değişiklik yapmak yerine, komutlar aracılığıyla bir durum değişikliği ger\xe7ekleştirir. Veri okuma işlemleri ise, okuma işlemleri i\xe7in optimize edilmiş ayrı bir veri modeli kullanır. Bu, uygulamanın performansını artırabilir ve daha kolay bakım yapılabilmesini sağlayabilir.\\n\\n","code":"var Component=(()=>{var k=Object.create;var l=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var c=Object.getPrototypeOf,o=Object.prototype.hasOwnProperty;var b=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),v=(i,e)=>{for(var a in e)l(i,a,{get:e[a],enumerable:!0})},t=(i,e,a,m)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let n of y(e))!o.call(i,n)&&n!==a&&l(i,n,{get:()=>e[n],enumerable:!(m=h(e,n))||m.enumerable});return i};var g=(i,e,a)=>(a=i!=null?k(c(i)):{},t(e||!i||!i.__esModule?l(a,\\"default\\",{value:i,enumerable:!0}):a,i)),z=i=>t(l({},\\"__esModule\\",{value:!0}),i);var s=b((A,d)=>{d.exports=_jsx_runtime});var f={};v(f,{default:()=>C,frontmatter:()=>p});var r=g(s()),p={title:\\"Mikroservis Desenleri - 1\\",date:new Date(17152128e5),summary:\\"En \\\\xE7ok kullan\\\\u0131lan mikro servis desenleri ve kullan\\\\u0131m ama\\\\xE7lar\\\\u0131.\\"};function u(i){let e=Object.assign({h1:\\"h1\\",h2:\\"h2\\",em:\\"em\\",p:\\"p\\",h3:\\"h3\\",ul:\\"ul\\",li:\\"li\\"},i.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{children:\\"Mikroservis Desenleri\\"}),`\\n`,i.rdrImg(\\"/content-images/ms-patterns-1.png\\",\\"\\"),`\\n`,(0,r.jsx)(e.h2,{children:(0,r.jsx)(e.em,{children:\\"API Gateway\\"})}),`\\n`,(0,r.jsx)(e.p,{children:\\"API Gateway, bir mikro hizmet mimarisi i\\\\xE7inde bir merkezi nokta olarak hareket eder ve istemcilerin t\\\\xFCm hizmetlerle etkile\\\\u015Fim kurmak yerine tek bir API arac\\\\u0131l\\\\u0131\\\\u011F\\\\u0131yla ileti\\\\u015Fim kurmalar\\\\u0131n\\\\u0131 sa\\\\u011Flar. \\\\xD6rne\\\\u011Fin, bir e-ticaret uygulamas\\\\u0131nda, m\\\\xFC\\\\u015Fterilerin sat\\\\u0131n alma i\\\\u015Flemlerini ger\\\\xE7ekle\\\\u015Ftirmek i\\\\xE7in \\\\xF6deme, envanter, kargo vb. hizmetlere ihtiya\\\\xE7lar\\\\u0131 vard\\\\u0131r. API Gateway, m\\\\xFC\\\\u015Fterilerin t\\\\xFCm bu hizmetlere tek bir API arac\\\\u0131l\\\\u0131\\\\u011F\\\\u0131yla eri\\\\u015Fmelerini ve sat\\\\u0131n alma i\\\\u015Flemlerini tamamlamalar\\\\u0131n\\\\u0131 sa\\\\u011Flar.\\"}),`\\n`,(0,r.jsx)(e.h2,{children:(0,r.jsx)(e.em,{children:\\"Service Registry\\"})}),`\\n`,(0,r.jsx)(e.p,{children:\\"Hizmet kayd\\\\u0131, t\\\\xFCm hizmetlerin (API\'ler, veri tabanlar\\\\u0131 vb.) adlar\\\\u0131n\\\\u0131n ve adreslerinin tutuldu\\\\u011Fu bir merkezi kaynakt\\\\u0131r. \\\\xD6rne\\\\u011Fin, bir e-ticaret uygulamas\\\\u0131nda, \\\\xF6deme hizmeti de\\\\u011Fi\\\\u015Firse, hizmet kayd\\\\u0131ndaki ad ve adres bilgisi g\\\\xFCncellenerek, di\\\\u011Fer hizmetlerin \\\\xF6deme hizmeti ile etkile\\\\u015Fimini s\\\\xFCrd\\\\xFCrmesi sa\\\\u011Flan\\\\u0131r.\\"}),`\\n`,(0,r.jsx)(e.h2,{children:(0,r.jsx)(e.em,{children:\\"Circuit Breaker\\"})}),`\\n`,(0,r.jsx)(e.p,{children:\\"Circuit Breaker, hata tolerans\\\\u0131n\\\\u0131 art\\\\u0131rmak i\\\\xE7in kullan\\\\u0131lan bir tasar\\\\u0131m desenidir. \\\\xD6rne\\\\u011Fin, bir bankac\\\\u0131l\\\\u0131k uygulamas\\\\u0131nda, para transferi hizmeti i\\\\xE7in hata olu\\\\u015Fursa Circuit Breaker devreye girerek, hizmeti ge\\\\xE7ici olarak durdurur ve m\\\\xFC\\\\u015Fteri verilerini korur.\\"}),`\\n`,(0,r.jsx)(e.p,{children:\\"Circuit Breaker pattern, bir yaz\\\\u0131l\\\\u0131m uygulamas\\\\u0131n\\\\u0131n hata tolerans\\\\u0131n\\\\u0131 art\\\\u0131rmak i\\\\xE7in kullan\\\\u0131lan bir tasar\\\\u0131m desenidir. Bu desen, bir hizmet \\\\xE7a\\\\u011Fr\\\\u0131s\\\\u0131 yaparken, olas\\\\u0131 hatalar\\\\u0131n \\\\xF6n\\\\xFCne ge\\\\xE7mek ve sistemdeki di\\\\u011Fer hizmetleri de etkilemeden hatal\\\\u0131 hizmet \\\\xE7a\\\\u011Fr\\\\u0131s\\\\u0131n\\\\u0131 d\\\\xFCzeltmek i\\\\xE7in kullan\\\\u0131l\\\\u0131r.\\"}),`\\n`,(0,r.jsx)(e.p,{children:\\"Bu desen, hizmet \\\\xE7a\\\\u011Fr\\\\u0131lar\\\\u0131ndan \\\\xF6nce belirli bir s\\\\xFCre boyunca hizmet sa\\\\u011Flay\\\\u0131c\\\\u0131s\\\\u0131na yap\\\\u0131lan \\\\xE7a\\\\u011Fr\\\\u0131 say\\\\u0131s\\\\u0131n\\\\u0131 takip eder. E\\\\u011Fer bir hizmet sa\\\\u011Flay\\\\u0131c\\\\u0131s\\\\u0131 belirlenen say\\\\u0131da \\\\xE7a\\\\u011Fr\\\\u0131da hata verirse, Circuit Breaker devreye girerek \\\\xE7a\\\\u011Fr\\\\u0131lar\\\\u0131 engeller ve sistemdeki di\\\\u011Fer hizmetlere etki etmemesini sa\\\\u011Flar.\\"}),`\\n`,(0,r.jsx)(e.p,{children:\\"Circuit Breaker, hata say\\\\u0131s\\\\u0131n\\\\u0131 belirli bir seviyenin \\\\xFCzerine \\\\xE7\\\\u0131kt\\\\u0131\\\\u011F\\\\u0131nda, hizmet \\\\xE7a\\\\u011Fr\\\\u0131lar\\\\u0131n\\\\u0131 otomatik olarak reddeder ve bir belirte\\\\xE7 d\\\\xF6nd\\\\xFCr\\\\xFCr. Bu belirte\\\\xE7, uygulaman\\\\u0131n hata say\\\\u0131s\\\\u0131n\\\\u0131 belirleyebilmesini sa\\\\u011Flar ve hata durumunda sistemdeki di\\\\u011Fer bile\\\\u015Fenleri korur.\\"}),`\\n`,(0,r.jsx)(e.h3,{children:\\"Circuit Breaker States\\"}),`\\n`,(0,r.jsxs)(e.ul,{children:[`\\n`,(0,r.jsx)(e.li,{children:\\"Closed (Kapal\\\\u0131): \\\\u0130lk durumda Circuit Breaker kapal\\\\u0131d\\\\u0131r ve normal hizmet \\\\xE7a\\\\u011Fr\\\\u0131lar\\\\u0131na izin verir. Hizmet sa\\\\u011Flay\\\\u0131c\\\\u0131s\\\\u0131na yap\\\\u0131lan \\\\xE7a\\\\u011Fr\\\\u0131lar hata vermez ve Circuit Breaker a\\\\xE7\\\\u0131lmaz.\\"}),`\\n`,(0,r.jsx)(e.li,{children:\\"Open (A\\\\xE7\\\\u0131k): \\\\u0130kinci durumda Circuit Breaker a\\\\xE7\\\\u0131kt\\\\u0131r ve hizmet \\\\xE7a\\\\u011Fr\\\\u0131lar\\\\u0131 reddedilir. Bu durum, belirli bir s\\\\xFCre boyunca hizmet sa\\\\u011Flay\\\\u0131c\\\\u0131s\\\\u0131na yap\\\\u0131lan \\\\xE7a\\\\u011Fr\\\\u0131lar\\\\u0131n belirli bir oranda hata vermesi sonucu meydana gelir.\\"}),`\\n`,(0,r.jsx)(e.li,{children:\\"Half-Open (Yar\\\\u0131 A\\\\xE7\\\\u0131k): \\\\xDC\\\\xE7\\\\xFCnc\\\\xFC durumda Circuit Breaker yar\\\\u0131 a\\\\xE7\\\\u0131kt\\\\u0131r ve birka\\\\xE7 hizmet \\\\xE7a\\\\u011Fr\\\\u0131s\\\\u0131n\\\\u0131 izin verir. Bu durumda, Circuit Breaker, bir hizmet \\\\xE7a\\\\u011Fr\\\\u0131s\\\\u0131 yaparak hizmet sa\\\\u011Flay\\\\u0131c\\\\u0131s\\\\u0131n\\\\u0131n tekrar \\\\xE7al\\\\u0131\\\\u015F\\\\u0131p \\\\xE7al\\\\u0131\\\\u015Fmad\\\\u0131\\\\u011F\\\\u0131n\\\\u0131 kontrol eder. E\\\\u011Fer hizmet \\\\xE7a\\\\u011Fr\\\\u0131s\\\\u0131 ba\\\\u015Far\\\\u0131l\\\\u0131 olursa, Circuit Breaker tekrar kapal\\\\u0131 duruma ge\\\\xE7er ve normal hizmet \\\\xE7a\\\\u011Fr\\\\u0131lar\\\\u0131na izin verir. Ancak, hizmet \\\\xE7a\\\\u011Fr\\\\u0131s\\\\u0131 ba\\\\u015Far\\\\u0131s\\\\u0131z olursa, Circuit Breaker tekrar a\\\\xE7\\\\u0131k duruma ge\\\\xE7er ve hizmet \\\\xE7a\\\\u011Fr\\\\u0131lar\\\\u0131 reddedilir.\\"}),`\\n`]}),`\\n`,(0,r.jsx)(e.h2,{children:(0,r.jsx)(e.em,{children:\\"Saga Pattern\\"})}),`\\n`,(0,r.jsx)(e.p,{children:\\"Bu pattern, bir i\\\\u015Flem zinciri boyunca birden fazla mikroservis \\\\xE7a\\\\u011Fr\\\\u0131s\\\\u0131n\\\\u0131 y\\\\xF6netmek i\\\\xE7in kullan\\\\u0131l\\\\u0131r. Saga, bir i\\\\u015Flemi birden fazla ad\\\\u0131mda ger\\\\xE7ekle\\\\u015Ftiren bir i\\\\u015Flem zinciri olarak d\\\\xFC\\\\u015F\\\\xFCn\\\\xFClebilir. Her ad\\\\u0131m, bir mikroservis \\\\xE7a\\\\u011Fr\\\\u0131s\\\\u0131n\\\\u0131 temsil eder ve hata tolerans\\\\u0131n\\\\u0131 sa\\\\u011Flamak i\\\\xE7in geri alma (compensation) ad\\\\u0131mlar\\\\u0131 eklenir. \\\\xD6rne\\\\u011Fin, bir sipari\\\\u015Fin i\\\\u015Flenmesi, bir m\\\\xFC\\\\u015Fteriye \\\\xF6deme yap\\\\u0131lmas\\\\u0131 ve bir \\\\xFCr\\\\xFCn\\\\xFCn sevkiyat\\\\u0131n\\\\u0131n yap\\\\u0131lmas\\\\u0131 gibi bir\\\\xE7ok ad\\\\u0131mdan olu\\\\u015Fabilir.\\"}),`\\n`,(0,r.jsx)(e.h2,{children:(0,r.jsx)(e.em,{children:\\"Event Sourcing Pattern\\"})}),`\\n`,(0,r.jsx)(e.p,{children:\\"Bu pattern, bir uygulamada meydana gelen t\\\\xFCm olaylar\\\\u0131n bir kay\\\\u0131d\\\\u0131nda sakland\\\\u0131\\\\u011F\\\\u0131 bir yakla\\\\u015F\\\\u0131md\\\\u0131r. Bu olaylar, uygulaman\\\\u0131n durumunu olu\\\\u015Fturur ve her bir olay, uygulaman\\\\u0131n ge\\\\xE7mi\\\\u015F durumuna dayal\\\\u0131 olarak bir sonraki durumu etkiler. Bu pattern, bir\\\\xE7ok i\\\\u015Flemi ve veri g\\\\xFCncellemesini kolayla\\\\u015Ft\\\\u0131r\\\\u0131r ve hata ay\\\\u0131klama ve geri alma i\\\\u015Flemlerini kolayla\\\\u015Ft\\\\u0131r\\\\u0131r. \\\\xD6rne\\\\u011Fin, bir banka uygulamas\\\\u0131nda, bir m\\\\xFC\\\\u015Fterinin hesap hareketleri kaydedilebilir ve bu bilgiler, m\\\\xFC\\\\u015Fterinin hesap ge\\\\xE7mi\\\\u015Fi veya raporlama i\\\\xE7in kullan\\\\u0131labilir.\\"}),`\\n`,(0,r.jsx)(e.h2,{children:(0,r.jsx)(e.em,{children:\\"Strangler Pattern\\"})}),`\\n`,(0,r.jsx)(e.p,{children:\\"Bu desen, mevcut bir uygulaman\\\\u0131n veya sistemin s\\\\xFCrd\\\\xFCr\\\\xFClmesi veya yeniden geli\\\\u015Ftirilmesi gerekti\\\\u011Finde kullan\\\\u0131l\\\\u0131r. Temel amac\\\\u0131, mevcut sistemi yava\\\\u015F yava\\\\u015F terk ederek, yeni bir sistem veya uygulama in\\\\u015Fa etmeyi ve eski sistem yerine kullanmay\\\\u0131 hedefler.\\"}),`\\n`,(0,r.jsx)(e.h2,{children:(0,r.jsx)(e.em,{children:\\"CQRS\\"})}),`\\n`,(0,r.jsx)(e.p,{children:\\"Command Query Responsibility Segregation bir yaz\\\\u0131l\\\\u0131m mimarisi desenidir. Bu desen, bir uygulaman\\\\u0131n komutlar\\\\u0131n\\\\u0131 (veri yazma i\\\\u015Flemleri) ve sorgular\\\\u0131n\\\\u0131 (veri okuma i\\\\u015Flemleri) farkl\\\\u0131 i\\\\u015Flemler olarak ele alarak, farkl\\\\u0131 birimlerde i\\\\u015Flemesi fikrine dayan\\\\u0131r.\\"}),`\\n`,(0,r.jsx)(e.p,{children:\\"Geleneksel bir uygulama mimarisinde, hem veri yazma hem de veri okuma i\\\\u015Flemleri ayn\\\\u0131 veri modeli \\\\xFCzerinde ger\\\\xE7ekle\\\\u015Ftirilir. Bu, uygulaman\\\\u0131n performans\\\\u0131n\\\\u0131 olumsuz y\\\\xF6nde etkileyebilir ve karma\\\\u015F\\\\u0131k i\\\\u015F mant\\\\u0131\\\\u011F\\\\u0131n\\\\u0131 zorla\\\\u015Ft\\\\u0131rabilir.\\"}),`\\n`,(0,r.jsx)(e.p,{children:\\"CQRS yakla\\\\u015F\\\\u0131m\\\\u0131nda, veri yazma i\\\\u015Flemleri ve veri okuma i\\\\u015Flemleri farkl\\\\u0131 birimlerde ele al\\\\u0131n\\\\u0131r. Veri yazma i\\\\u015Flemleri, veri modelinde de\\\\u011Fi\\\\u015Fiklik yapmak yerine, komutlar arac\\\\u0131l\\\\u0131\\\\u011F\\\\u0131yla bir durum de\\\\u011Fi\\\\u015Fikli\\\\u011Fi ger\\\\xE7ekle\\\\u015Ftirir. Veri okuma i\\\\u015Flemleri ise, okuma i\\\\u015Flemleri i\\\\xE7in optimize edilmi\\\\u015F ayr\\\\u0131 bir veri modeli kullan\\\\u0131r. Bu, uygulaman\\\\u0131n performans\\\\u0131n\\\\u0131 art\\\\u0131rabilir ve daha kolay bak\\\\u0131m yap\\\\u0131labilmesini sa\\\\u011Flayabilir.\\"})]})}function B(i={}){let{wrapper:e}=i.components||{};return e?(0,r.jsx)(e,Object.assign({},i,{children:(0,r.jsx)(u,i)})):u(i)}var C=B;return z(f);})();\\n;return Component;"},"_id":"microservice-patterns-1.mdx","_raw":{"sourceFilePath":"microservice-patterns-1.mdx","sourceFileName":"microservice-patterns-1.mdx","sourceFileDir":".","contentType":"mdx","flattenedPath":"microservice-patterns-1"},"type":"Post","url":"/posts/microservice-patterns-1"},{"title":"Python Disassemble Kullanim Rehberi","date":"2024-05-05","summary":"Python disassemble neden ve nasil kullanilir? Komutlari ne ifade eder? Kod takibi nasil yapilir?","body":{"raw":"\\n# Python Disassemble Kullanim Rehberi\\n","code":"var Component=(()=>{var u=Object.create;var s=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var f=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),y=(e,n)=>{for(var t in n)s(e,t,{get:n[t],enumerable:!0})},r=(e,n,t,o)=>{if(n&&typeof n==\\"object\\"||typeof n==\\"function\\")for(let i of h(n))!x.call(e,i)&&i!==t&&s(e,i,{get:()=>n[i],enumerable:!(o=d(n,i))||o.enumerable});return e};var j=(e,n,t)=>(t=e!=null?u(b(e)):{},r(n||!e||!e.__esModule?s(t,\\"default\\",{value:e,enumerable:!0}):t,e)),D=e=>r(s({},\\"__esModule\\",{value:!0}),e);var m=f((g,l)=>{l.exports=_jsx_runtime});var M={};y(M,{default:()=>K,frontmatter:()=>_});var a=j(m()),_={title:\\"Python Disassemble Kullanim Rehberi\\",date:new Date(17148672e5),summary:\\"Python disassemble neden ve nasil kullanilir? Komutlari ne ifade eder? Kod takibi nasil yapilir?\\"};function c(e){let n=Object.assign({h1:\\"h1\\"},e.components);return(0,a.jsx)(n.h1,{children:\\"Python Disassemble Kullanim Rehberi\\"})}function p(e={}){let{wrapper:n}=e.components||{};return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(c,e)})):c(e)}var K=p;return D(M);})();\\n;return Component;"},"_id":"python-disassemble-kullanim-rehberi.mdx","_raw":{"sourceFilePath":"python-disassemble-kullanim-rehberi.mdx","sourceFileName":"python-disassemble-kullanim-rehberi.mdx","sourceFileDir":".","contentType":"mdx","flattenedPath":"python-disassemble-kullanim-rehberi"},"type":"Post","url":"/posts/python-disassemble-kullanim-rehberi"},{"title":"Required Approvals Count for GitLab Free Tier","date":"2023-11-12","summary":"Even if you are not a GitLab EE user, you can protect your branches with an approval count requirement on your small private projects with your companions.","body":{"raw":"\\n# Required Approvals Count for GitLab Free Tier\\n\\nIf your side project with your companions is nominated to be a big project but not big enough to buy GitLab/GitHub Enterprise, then you will not be able to use some beautiful features of GitLab/GitHub like protecting branches with a minimum approvals count. Here is a workaround for your project to achieve this feature over CI/CD steps. This implementation is done directly on GitLab, and you can implement the same steps on GitHub too.\\n\\nSimply put, you can run some job/workflow when there is a merge request to your protected branch. It can be anything like running unit tests, checks for formatting, deployment on your test servers to prepare that feature for QA developers. And you can set your MR to be possible only within some of these jobs done successfully. So we can use this feature with the purpose of requiring approvals for an MR to a protected branch.\\n\\nHowever, this approach depends on trust within the team because you can simply break this flow by committing changes to your job definitions. Here are the instructions for implementing this on GitLab.\\n\\n## 1. Create a Job/Workflow\\nThis job will be triggered on `merge_request_events` to gather some data from the GitLab REST API. Therefore, we need to have an access token in our project\'s environment variables.\\n\\n### 1.1 Create Your Access Token\\nFollow the link below to create a **personal access token**. GitLab does not allow **project access tokens** for now for gitlab.com free users. However, in case of being free in the future, I\'ve left the link below.\\n\\n- [Personal Access Token Document](https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html#create-a-personal-access-token)\\n- [Project Access Token Document](https://docs.gitlab.com/ee/user/project/settings/project_access_tokens.html#create-a-project-access-token)\\n\\nYou must define scopes below for the access token.\\n- [x] api\\n- [x] read_user\\n- [x] read_api\\n- [x] read_repository\\n\\n> Do not forget to copy your access token; you will not be able to do it after closing the page.\\n\\n### 1.2 Set Access Token as a Variable\\nThe one who makes these settings must be the owner or maintainer of the project. Set your copied access token as an environment variable named `ACCESS_TOKEN`, and it will be a masked variable.\\n\\n- [Variable Definition Document](https://docs.gitlab.com/ee/ci/variables/#for-a-project)\\n\\nThe variable must be masked because we do not want to reveal our access token in the job\'s output. And other users must have the role `developer`; otherwise, they can reveal your access token on the settings page.\\n\\n### 1.3 Create an Approval-Check Step on Your CI\\nIn your `.gitlab-ci.yml` file, add a step called **approval-check** and make this step triggered on `merge_request` events. And put it in a proper stage to run.\\n\\n```yaml\\napproval-check:\\n  stage: sdlc\\n  only:\\n    - merge_requests\\n  script:\\n    - apt-get -qq update\\n    - apt-get install -y jq\\n    - ./.gitlab_approval.sh ${ACCESS_TOKEN} $CI_PROJECT_ID $CI_MERGE_REQUEST_IID\\n```\\n\\nYou should pass required parameters to the bash file. Since the file will call the GitLab API and evaluate the MR, it needs the parameters below:\\n- **$ACCESS_TOKEN**: to be authorized to Rest calls\\n- **$CI_PROJECT_ID**: current project\'s id\\n- **$CI_MERGE_REQUEST_IID**: current MR\'s id\\n\\nYou will see in the second section how these parameters are used. You must define your access token variable in the variables section and set a proper stage for your job.\\n\\n```yaml\\nstages:\\n  - sdlc\\n\\n...\\n\\nvariables:\\n  ACCESS_TOKEN: $ACCESS_TOKEN\\n\\n...\\n\\napproval-check:\\n  stage: sdlc\\n  only:\\n    - merge_requests\\n  script:\\n    - apt-get -qq update\\n    - apt-get install -y jq\\n    - ./.gitlab_approval.sh ${ACCESS_TOKEN} $CI_PROJECT_ID $CI_MERGE_REQUEST_IID\\n```\\n\\n## 2. Create Job/Workflow Logic\\nCreate a bash file and make some REST requests to gitlab.com to gather info about the MR. Evaluate approval info for that MR and return an error if the approval count is not sufficient.\\n\\n### 2.1 Install JQ\\nYou must install [jq](https://jqlang.github.io/jq/) command-line tool for JSON parsing. Installation is already added to the `approval-check` job, and for test purposes, you can install it like below.\\n\\n```bash\\n$ apt-get install jq\\n```\\n\\n### 2.2 Create Bash file\\nI named it `.gitlab-approval.sh` and located it in the root of the repo folder. This bash file has 3 parameters as below.\\n\\n```bash\\n# $1 AN_ACCESS_TOKEN with read_api\\n# $2 CI_PROJECT_ID\\n# $3 CI_MERGE_REQUEST_IID\\n```\\n\\n### 2.3 Gather Related Authors\\nThe author of the MR and other companions that approve the current MR are needed. Thus [Merge Request Level Approvals](https://docs.gitlab.com/ee/api/merge_request_approvals.html#merge-request-level-mr-approvals) and [Get Single MR](https://docs.gitlab.com/ee/api/merge_requests.html#get-single-mr) endpoints are used.\\n\\n```bash\\n# ----------------------------------- GATHER AUTHOR INFO\\nresp_author=$(curl --header \\"Authorization: Bearer ${1}\\" -s \\"https://gitlab.com/api/v4/projects/${2}/merge_requests/${3}\\")\\nauthor=$(echo $resp_author | tr -d \'\\\\n\' | jq -r \'.author.username\')\\n\\n# ----------------------------------- GATHER APPROVALS\\nresp_approvals=$(curl --header \\"Authorization: Bearer ${1}\\" -s \\"https://gitlab.com/api/v4/projects/${2}/merge_requests/${3}/approvals\\")\\napprovals=$(echo $resp_approvals | tr -d \'\\\\n\' | jq -r \'.approved_by\')\\n```\\n\\n### 2.4 Counting Valid Approvals\\nSelf-approval is needed to be excluded, and proper approvals should be counted as valid approvals.\\n\\n```bash\\ntotal_approval_count=$(echo $approvals | jq length)\\nvalid_approval_count=0\\nfor index in $(seq 0 $(($total_approval_count-1)) )\\ndo\\n    approval_author=$(echo $approvals | jq -r \\".[${index}].user.username\\")\\n    if [ \\"${author}\\" != \\"${approval_author}\\" ]; then\\n        ((valid_approval_count++))\\n    fi\\ndone\\n```\\n\\n### 2.5 Evaluate Valid Approval Count\\nIf the valid_approval_count is less than the required_approval_count, then the script must exit with an error number, like 1. Otherwise, it should exit with 0.\\n\\n```bash\\nrequired_approval_count=2\\n\\nif [ $valid_approval_count -lt $required_approval_count ]; then\\n    echo \\">>>FAILURE<<< At least ${required_approval_count} approvals are needed, from other than the MR author.\\"\\n    exit 1\\nfi\\necho \\">>>SUCCESS<<< This MR has ${required_approval_count} approvals, from other than the MR author.\\"\\nexit 0\\n```\\n\\n## Conclusion\\nWith this approach, you can simply allow your main branch protected over the required approval count for merge requests without paying for it. However, it depends on the trust in the team; anyone can remove this job directly from the `.gitlab-ci.yml` file and merge the request. It is not that strict as GitLab/GitHub offers. That\'s why I called this a workaround for only small teams.\\n\\nHope this article will help you with your small projects tend to become a bigger one with multiple development participants. Have a nice day!","code":"var Component=(()=>{var p=Object.create;var o=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var g=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),v=(t,e)=>{for(var r in e)o(t,r,{get:e[r],enumerable:!0})},l=(t,e,r,i)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let a of u(e))!b.call(t,a)&&a!==r&&o(t,a,{get:()=>e[a],enumerable:!(i=d(e,a))||i.enumerable});return t};var f=(t,e,r)=>(r=t!=null?p(m(t)):{},l(e||!t||!t.__esModule?o(r,\\"default\\",{value:t,enumerable:!0}):r,t)),_=t=>l(o({},\\"__esModule\\",{value:!0}),t);var c=g((q,s)=>{s.exports=_jsx_runtime});var C={};v(C,{default:()=>E,frontmatter:()=>y});var n=f(c()),y={title:\\"Required Approvals Count for GitLab Free Tier\\",date:new Date(16997472e5),summary:\\"Even if you are not a GitLab EE user, you can protect your branches with an approval count requirement on your small private projects with your companions.\\"};function h(t){let e=Object.assign({h1:\\"h1\\",p:\\"p\\",h2:\\"h2\\",code:\\"code\\",h3:\\"h3\\",strong:\\"strong\\",ul:\\"ul\\",li:\\"li\\",a:\\"a\\",blockquote:\\"blockquote\\",pre:\\"pre\\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\\"Required Approvals Count for GitLab Free Tier\\"}),`\\n`,(0,n.jsx)(e.p,{children:\\"If your side project with your companions is nominated to be a big project but not big enough to buy GitLab/GitHub Enterprise, then you will not be able to use some beautiful features of GitLab/GitHub like protecting branches with a minimum approvals count. Here is a workaround for your project to achieve this feature over CI/CD steps. This implementation is done directly on GitLab, and you can implement the same steps on GitHub too.\\"}),`\\n`,(0,n.jsx)(e.p,{children:\\"Simply put, you can run some job/workflow when there is a merge request to your protected branch. It can be anything like running unit tests, checks for formatting, deployment on your test servers to prepare that feature for QA developers. And you can set your MR to be possible only within some of these jobs done successfully. So we can use this feature with the purpose of requiring approvals for an MR to a protected branch.\\"}),`\\n`,(0,n.jsx)(e.p,{children:\\"However, this approach depends on trust within the team because you can simply break this flow by committing changes to your job definitions. Here are the instructions for implementing this on GitLab.\\"}),`\\n`,(0,n.jsx)(e.h2,{children:\\"1. Create a Job/Workflow\\"}),`\\n`,(0,n.jsxs)(e.p,{children:[\\"This job will be triggered on \\",(0,n.jsx)(e.code,{children:\\"merge_request_events\\"}),\\" to gather some data from the GitLab REST API. Therefore, we need to have an access token in our project\'s environment variables.\\"]}),`\\n`,(0,n.jsx)(e.h3,{children:\\"1.1 Create Your Access Token\\"}),`\\n`,(0,n.jsxs)(e.p,{children:[\\"Follow the link below to create a \\",(0,n.jsx)(e.strong,{children:\\"personal access token\\"}),\\". GitLab does not allow \\",(0,n.jsx)(e.strong,{children:\\"project access tokens\\"}),\\" for now for gitlab.com free users. However, in case of being free in the future, I\'ve left the link below.\\"]}),`\\n`,(0,n.jsxs)(e.ul,{children:[`\\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\\"https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html#create-a-personal-access-token\\",children:\\"Personal Access Token Document\\"})}),`\\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\\"https://docs.gitlab.com/ee/user/project/settings/project_access_tokens.html#create-a-project-access-token\\",children:\\"Project Access Token Document\\"})}),`\\n`]}),`\\n`,(0,n.jsx)(e.p,{children:\\"You must define scopes below for the access token.\\"}),`\\n`,(0,n.jsxs)(e.ul,{children:[`\\n`,(0,n.jsx)(e.li,{children:\\"[x] api\\"}),`\\n`,(0,n.jsx)(e.li,{children:\\"[x] read_user\\"}),`\\n`,(0,n.jsx)(e.li,{children:\\"[x] read_api\\"}),`\\n`,(0,n.jsx)(e.li,{children:\\"[x] read_repository\\"}),`\\n`]}),`\\n`,(0,n.jsxs)(e.blockquote,{children:[`\\n`,(0,n.jsx)(e.p,{children:\\"Do not forget to copy your access token; you will not be able to do it after closing the page.\\"}),`\\n`]}),`\\n`,(0,n.jsx)(e.h3,{children:\\"1.2 Set Access Token as a Variable\\"}),`\\n`,(0,n.jsxs)(e.p,{children:[\\"The one who makes these settings must be the owner or maintainer of the project. Set your copied access token as an environment variable named \\",(0,n.jsx)(e.code,{children:\\"ACCESS_TOKEN\\"}),\\", and it will be a masked variable.\\"]}),`\\n`,(0,n.jsxs)(e.ul,{children:[`\\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\\"https://docs.gitlab.com/ee/ci/variables/#for-a-project\\",children:\\"Variable Definition Document\\"})}),`\\n`]}),`\\n`,(0,n.jsxs)(e.p,{children:[\\"The variable must be masked because we do not want to reveal our access token in the job\'s output. And other users must have the role \\",(0,n.jsx)(e.code,{children:\\"developer\\"}),\\"; otherwise, they can reveal your access token on the settings page.\\"]}),`\\n`,(0,n.jsx)(e.h3,{children:\\"1.3 Create an Approval-Check Step on Your CI\\"}),`\\n`,(0,n.jsxs)(e.p,{children:[\\"In your \\",(0,n.jsx)(e.code,{children:\\".gitlab-ci.yml\\"}),\\" file, add a step called \\",(0,n.jsx)(e.strong,{children:\\"approval-check\\"}),\\" and make this step triggered on \\",(0,n.jsx)(e.code,{children:\\"merge_request\\"}),\\" events. And put it in a proper stage to run.\\"]}),`\\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\\"language-yaml\\",children:`approval-check:\\n  stage: sdlc\\n  only:\\n    - merge_requests\\n  script:\\n    - apt-get -qq update\\n    - apt-get install -y jq\\n    - ./.gitlab_approval.sh \\\\${ACCESS_TOKEN} $CI_PROJECT_ID $CI_MERGE_REQUEST_IID\\n`})}),`\\n`,(0,n.jsx)(e.p,{children:\\"You should pass required parameters to the bash file. Since the file will call the GitLab API and evaluate the MR, it needs the parameters below:\\"}),`\\n`,(0,n.jsxs)(e.ul,{children:[`\\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\\"$ACCESS_TOKEN\\"}),\\": to be authorized to Rest calls\\"]}),`\\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\\"$CI_PROJECT_ID\\"}),\\": current project\'s id\\"]}),`\\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\\"$CI_MERGE_REQUEST_IID\\"}),\\": current MR\'s id\\"]}),`\\n`]}),`\\n`,(0,n.jsx)(e.p,{children:\\"You will see in the second section how these parameters are used. You must define your access token variable in the variables section and set a proper stage for your job.\\"}),`\\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\\"language-yaml\\",children:`stages:\\n  - sdlc\\n\\n...\\n\\nvariables:\\n  ACCESS_TOKEN: $ACCESS_TOKEN\\n\\n...\\n\\napproval-check:\\n  stage: sdlc\\n  only:\\n    - merge_requests\\n  script:\\n    - apt-get -qq update\\n    - apt-get install -y jq\\n    - ./.gitlab_approval.sh \\\\${ACCESS_TOKEN} $CI_PROJECT_ID $CI_MERGE_REQUEST_IID\\n`})}),`\\n`,(0,n.jsx)(e.h2,{children:\\"2. Create Job/Workflow Logic\\"}),`\\n`,(0,n.jsx)(e.p,{children:\\"Create a bash file and make some REST requests to gitlab.com to gather info about the MR. Evaluate approval info for that MR and return an error if the approval count is not sufficient.\\"}),`\\n`,(0,n.jsx)(e.h3,{children:\\"2.1 Install JQ\\"}),`\\n`,(0,n.jsxs)(e.p,{children:[\\"You must install \\",(0,n.jsx)(e.a,{href:\\"https://jqlang.github.io/jq/\\",children:\\"jq\\"}),\\" command-line tool for JSON parsing. Installation is already added to the \\",(0,n.jsx)(e.code,{children:\\"approval-check\\"}),\\" job, and for test purposes, you can install it like below.\\"]}),`\\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\\"language-bash\\",children:`$ apt-get install jq\\n`})}),`\\n`,(0,n.jsx)(e.h3,{children:\\"2.2 Create Bash file\\"}),`\\n`,(0,n.jsxs)(e.p,{children:[\\"I named it \\",(0,n.jsx)(e.code,{children:\\".gitlab-approval.sh\\"}),\\" and located it in the root of the repo folder. This bash file has 3 parameters as below.\\"]}),`\\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\\"language-bash\\",children:`# $1 AN_ACCESS_TOKEN with read_api\\n# $2 CI_PROJECT_ID\\n# $3 CI_MERGE_REQUEST_IID\\n`})}),`\\n`,(0,n.jsx)(e.h3,{children:\\"2.3 Gather Related Authors\\"}),`\\n`,(0,n.jsxs)(e.p,{children:[\\"The author of the MR and other companions that approve the current MR are needed. Thus \\",(0,n.jsx)(e.a,{href:\\"https://docs.gitlab.com/ee/api/merge_request_approvals.html#merge-request-level-mr-approvals\\",children:\\"Merge Request Level Approvals\\"}),\\" and \\",(0,n.jsx)(e.a,{href:\\"https://docs.gitlab.com/ee/api/merge_requests.html#get-single-mr\\",children:\\"Get Single MR\\"}),\\" endpoints are used.\\"]}),`\\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\\"language-bash\\",children:`# ----------------------------------- GATHER AUTHOR INFO\\nresp_author=$(curl --header \\"Authorization: Bearer \\\\${1}\\" -s \\"https://gitlab.com/api/v4/projects/\\\\${2}/merge_requests/\\\\${3}\\")\\nauthor=$(echo $resp_author | tr -d \'\\\\\\\\n\' | jq -r \'.author.username\')\\n\\n# ----------------------------------- GATHER APPROVALS\\nresp_approvals=$(curl --header \\"Authorization: Bearer \\\\${1}\\" -s \\"https://gitlab.com/api/v4/projects/\\\\${2}/merge_requests/\\\\${3}/approvals\\")\\napprovals=$(echo $resp_approvals | tr -d \'\\\\\\\\n\' | jq -r \'.approved_by\')\\n`})}),`\\n`,(0,n.jsx)(e.h3,{children:\\"2.4 Counting Valid Approvals\\"}),`\\n`,(0,n.jsx)(e.p,{children:\\"Self-approval is needed to be excluded, and proper approvals should be counted as valid approvals.\\"}),`\\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\\"language-bash\\",children:`total_approval_count=$(echo $approvals | jq length)\\nvalid_approval_count=0\\nfor index in $(seq 0 $(($total_approval_count-1)) )\\ndo\\n    approval_author=$(echo $approvals | jq -r \\".[\\\\${index}].user.username\\")\\n    if [ \\"\\\\${author}\\" != \\"\\\\${approval_author}\\" ]; then\\n        ((valid_approval_count++))\\n    fi\\ndone\\n`})}),`\\n`,(0,n.jsx)(e.h3,{children:\\"2.5 Evaluate Valid Approval Count\\"}),`\\n`,(0,n.jsx)(e.p,{children:\\"If the valid_approval_count is less than the required_approval_count, then the script must exit with an error number, like 1. Otherwise, it should exit with 0.\\"}),`\\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\\"language-bash\\",children:`required_approval_count=2\\n\\nif [ $valid_approval_count -lt $required_approval_count ]; then\\n    echo \\">>>FAILURE<<< At least \\\\${required_approval_count} approvals are needed, from other than the MR author.\\"\\n    exit 1\\nfi\\necho \\">>>SUCCESS<<< This MR has \\\\${required_approval_count} approvals, from other than the MR author.\\"\\nexit 0\\n`})}),`\\n`,(0,n.jsx)(e.h2,{children:\\"Conclusion\\"}),`\\n`,(0,n.jsxs)(e.p,{children:[\\"With this approach, you can simply allow your main branch protected over the required approval count for merge requests without paying for it. However, it depends on the trust in the team; anyone can remove this job directly from the \\",(0,n.jsx)(e.code,{children:\\".gitlab-ci.yml\\"}),\\" file and merge the request. It is not that strict as GitLab/GitHub offers. That\'s why I called this a workaround for only small teams.\\"]}),`\\n`,(0,n.jsx)(e.p,{children:\\"Hope this article will help you with your small projects tend to become a bigger one with multiple development participants. Have a nice day!\\"})]})}function w(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(h,t)})):h(t)}var E=w;return _(C);})();\\n;return Component;"},"_id":"required-approvals-count-gitlab-free-tier.mdx","_raw":{"sourceFilePath":"required-approvals-count-gitlab-free-tier.mdx","sourceFileName":"required-approvals-count-gitlab-free-tier.mdx","sourceFileDir":".","contentType":"mdx","flattenedPath":"required-approvals-count-gitlab-free-tier"},"type":"Post","url":"/posts/required-approvals-count-gitlab-free-tier"},{"title":"SOLID Prensipleri","date":"2024-05-10","summary":"SOLID (Single Responsibility, Open-Close, Liskov Substitution, Interface Segregation, Dependency Inversion) Prensipleri nedir? SOLID Prensiplerinin amacı ve kullanım senaryoları","body":{"raw":"\\n# SOLID Prensipleri\\n\\nSOLID prensipleri, yazılım geliştirme s\xfcrecinde daha temiz, esnek ve s\xfcrd\xfcr\xfclebilir kod yazmak i\xe7in kullanılan beş temel prensiptir. Bu prensipler, yazılım tasarımında karmaşıklığı azaltmak, kodun bakımını kolaylaştırmak ve kodun daha iyi anlaşılmasını sağlamak amacıyla geliştirilmiştir.\\n\\n## *Single Responsibility Principle*\\n**Tek Sorumluluk Prensibi.**\\nBir sınıfın sadece bir sorumluluğu olmalıdır. Her sınıfın tek bir işlevi veya sorumluluğu olmalıdır. B\xf6ylece, değişikliklerin etkileri sınırlı olur ve kod daha anlaşılabilir hale gelir.\\n\\n## *Open-Closed Principle*\\n**A\xe7ık Kapalı Prensibi.**\\nBir sınıf, mevcut davranışları değiştirmeden yeni davranışlar ekleyebilmelidir. Yani bir sınıf, genişletmeye a\xe7ık (open for extension) ancak değişikliğe kapalı (closed for modification) olmalıdır. Bu prensip, kodun daha az kırılgan olmasını ve daha kolay genişletilebilir olmasını sağlar.\\n\\n## *Liskov Substitution Principle*\\n**Liskov Yerine Ge\xe7me Prensibi.**\\n\xdcst sınıflar, alt sınıflar tarafından sorunsuz bir şekilde yerine ge\xe7ilebilir olmalıdır. Yani, bir \xfcst sınıfın yerine alt sınıf ge\xe7tiğinde, hi\xe7bir şey bozulmamalı veya hatalara yol a\xe7mamalıdır. Bu prensip, sınıf hiyerarşilerinin doğru bir şekilde yapılandırılmasını ve polimorfizmin etkin bir şekilde kullanılmasını sağlar.\\n\\n## *Interface Segregation Principle*\\n**Aray\xfcz Ayrımı Prensibi.**\\nİstemciye gereksinim duymadığı \xf6zellikleri dayatmamak amacıyla, m\xfcmk\xfcn olduğunca \xf6zelleştirilmiş aray\xfczler kullanılmalıdır. Yani, bir sınıf, kullanılmayacak olan metotları i\xe7eren geniş aray\xfczler yerine daha k\xfc\xe7\xfck ve \xf6zelleştirilmiş aray\xfczler kullanmalıdır. Bu prensip, bağımlılıkları azaltır ve sınıflar arasındaki bağlantıları gevşetir.\\n\\n## *Dependency Inversion Principle*\\n**Bağımlılığı Tersine \xc7evirme Prensibi.**\\n\xdcst seviye mod\xfcller, alt seviye mod\xfcllere doğrudan bağımlı olmamalıdır. İstikrarlı ve yeniden kullanılabilir bir kod i\xe7in, bağımlılıklar soyutlamalara (interface veya abstract class) dayandırılmalıdır. Bu prensip, birim testlerin daha kolay yapılabilmesini sağlar ve bağımlılıkları y\xf6netmeyi kolaylaştırır.","code":"var Component=(()=>{var c=Object.create;var r=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var h=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),b=(i,e)=>{for(var l in e)r(i,l,{get:e[l],enumerable:!0})},t=(i,e,l,s)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let a of u(e))!p.call(i,a)&&a!==l&&r(i,a,{get:()=>e[a],enumerable:!(s=k(e,a))||s.enumerable});return i};var g=(i,e,l)=>(l=i!=null?c(y(i)):{},t(e||!i||!i.__esModule?r(l,\\"default\\",{value:i,enumerable:!0}):l,i)),v=i=>t(r({},\\"__esModule\\",{value:!0}),i);var d=h((D,m)=>{m.exports=_jsx_runtime});var S={};b(S,{default:()=>P,frontmatter:()=>f});var n=g(d()),f={title:\\"SOLID Prensipleri\\",date:new Date(17152992e5),summary:\\"SOLID (Single Responsibility, Open-Close, Liskov Substitution, Interface Segregation, Dependency Inversion) Prensipleri nedir? SOLID Prensiplerinin amac\\\\u0131 ve kullan\\\\u0131m senaryolar\\\\u0131\\"};function o(i){let e=Object.assign({h1:\\"h1\\",p:\\"p\\",h2:\\"h2\\",em:\\"em\\",strong:\\"strong\\"},i.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\\"SOLID Prensipleri\\"}),`\\n`,(0,n.jsx)(e.p,{children:\\"SOLID prensipleri, yaz\\\\u0131l\\\\u0131m geli\\\\u015Ftirme s\\\\xFCrecinde daha temiz, esnek ve s\\\\xFCrd\\\\xFCr\\\\xFClebilir kod yazmak i\\\\xE7in kullan\\\\u0131lan be\\\\u015F temel prensiptir. Bu prensipler, yaz\\\\u0131l\\\\u0131m tasar\\\\u0131m\\\\u0131nda karma\\\\u015F\\\\u0131kl\\\\u0131\\\\u011F\\\\u0131 azaltmak, kodun bak\\\\u0131m\\\\u0131n\\\\u0131 kolayla\\\\u015Ft\\\\u0131rmak ve kodun daha iyi anla\\\\u015F\\\\u0131lmas\\\\u0131n\\\\u0131 sa\\\\u011Flamak amac\\\\u0131yla geli\\\\u015Ftirilmi\\\\u015Ftir.\\"}),`\\n`,(0,n.jsx)(e.h2,{children:(0,n.jsx)(e.em,{children:\\"Single Responsibility Principle\\"})}),`\\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\\"Tek Sorumluluk Prensibi.\\"}),`\\nBir s\\\\u0131n\\\\u0131f\\\\u0131n sadece bir sorumlulu\\\\u011Fu olmal\\\\u0131d\\\\u0131r. Her s\\\\u0131n\\\\u0131f\\\\u0131n tek bir i\\\\u015Flevi veya sorumlulu\\\\u011Fu olmal\\\\u0131d\\\\u0131r. B\\\\xF6ylece, de\\\\u011Fi\\\\u015Fikliklerin etkileri s\\\\u0131n\\\\u0131rl\\\\u0131 olur ve kod daha anla\\\\u015F\\\\u0131labilir hale gelir.`]}),`\\n`,(0,n.jsx)(e.h2,{children:(0,n.jsx)(e.em,{children:\\"Open-Closed Principle\\"})}),`\\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\\"A\\\\xE7\\\\u0131k Kapal\\\\u0131 Prensibi.\\"}),`\\nBir s\\\\u0131n\\\\u0131f, mevcut davran\\\\u0131\\\\u015Flar\\\\u0131 de\\\\u011Fi\\\\u015Ftirmeden yeni davran\\\\u0131\\\\u015Flar ekleyebilmelidir. Yani bir s\\\\u0131n\\\\u0131f, geni\\\\u015Fletmeye a\\\\xE7\\\\u0131k (open for extension) ancak de\\\\u011Fi\\\\u015Fikli\\\\u011Fe kapal\\\\u0131 (closed for modification) olmal\\\\u0131d\\\\u0131r. Bu prensip, kodun daha az k\\\\u0131r\\\\u0131lgan olmas\\\\u0131n\\\\u0131 ve daha kolay geni\\\\u015Fletilebilir olmas\\\\u0131n\\\\u0131 sa\\\\u011Flar.`]}),`\\n`,(0,n.jsx)(e.h2,{children:(0,n.jsx)(e.em,{children:\\"Liskov Substitution Principle\\"})}),`\\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\\"Liskov Yerine Ge\\\\xE7me Prensibi.\\"}),`\\n\\\\xDCst s\\\\u0131n\\\\u0131flar, alt s\\\\u0131n\\\\u0131flar taraf\\\\u0131ndan sorunsuz bir \\\\u015Fekilde yerine ge\\\\xE7ilebilir olmal\\\\u0131d\\\\u0131r. Yani, bir \\\\xFCst s\\\\u0131n\\\\u0131f\\\\u0131n yerine alt s\\\\u0131n\\\\u0131f ge\\\\xE7ti\\\\u011Finde, hi\\\\xE7bir \\\\u015Fey bozulmamal\\\\u0131 veya hatalara yol a\\\\xE7mamal\\\\u0131d\\\\u0131r. Bu prensip, s\\\\u0131n\\\\u0131f hiyerar\\\\u015Filerinin do\\\\u011Fru bir \\\\u015Fekilde yap\\\\u0131land\\\\u0131r\\\\u0131lmas\\\\u0131n\\\\u0131 ve polimorfizmin etkin bir \\\\u015Fekilde kullan\\\\u0131lmas\\\\u0131n\\\\u0131 sa\\\\u011Flar.`]}),`\\n`,(0,n.jsx)(e.h2,{children:(0,n.jsx)(e.em,{children:\\"Interface Segregation Principle\\"})}),`\\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\\"Aray\\\\xFCz Ayr\\\\u0131m\\\\u0131 Prensibi.\\"}),`\\n\\\\u0130stemciye gereksinim duymad\\\\u0131\\\\u011F\\\\u0131 \\\\xF6zellikleri dayatmamak amac\\\\u0131yla, m\\\\xFCmk\\\\xFCn oldu\\\\u011Funca \\\\xF6zelle\\\\u015Ftirilmi\\\\u015F aray\\\\xFCzler kullan\\\\u0131lmal\\\\u0131d\\\\u0131r. Yani, bir s\\\\u0131n\\\\u0131f, kullan\\\\u0131lmayacak olan metotlar\\\\u0131 i\\\\xE7eren geni\\\\u015F aray\\\\xFCzler yerine daha k\\\\xFC\\\\xE7\\\\xFCk ve \\\\xF6zelle\\\\u015Ftirilmi\\\\u015F aray\\\\xFCzler kullanmal\\\\u0131d\\\\u0131r. Bu prensip, ba\\\\u011F\\\\u0131ml\\\\u0131l\\\\u0131klar\\\\u0131 azalt\\\\u0131r ve s\\\\u0131n\\\\u0131flar aras\\\\u0131ndaki ba\\\\u011Flant\\\\u0131lar\\\\u0131 gev\\\\u015Fetir.`]}),`\\n`,(0,n.jsx)(e.h2,{children:(0,n.jsx)(e.em,{children:\\"Dependency Inversion Principle\\"})}),`\\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\\"Ba\\\\u011F\\\\u0131ml\\\\u0131l\\\\u0131\\\\u011F\\\\u0131 Tersine \\\\xC7evirme Prensibi.\\"}),`\\n\\\\xDCst seviye mod\\\\xFCller, alt seviye mod\\\\xFCllere do\\\\u011Frudan ba\\\\u011F\\\\u0131ml\\\\u0131 olmamal\\\\u0131d\\\\u0131r. \\\\u0130stikrarl\\\\u0131 ve yeniden kullan\\\\u0131labilir bir kod i\\\\xE7in, ba\\\\u011F\\\\u0131ml\\\\u0131l\\\\u0131klar soyutlamalara (interface veya abstract class) dayand\\\\u0131r\\\\u0131lmal\\\\u0131d\\\\u0131r. Bu prensip, birim testlerin daha kolay yap\\\\u0131labilmesini sa\\\\u011Flar ve ba\\\\u011F\\\\u0131ml\\\\u0131l\\\\u0131klar\\\\u0131 y\\\\xF6netmeyi kolayla\\\\u015Ft\\\\u0131r\\\\u0131r.`]})]})}function z(i={}){let{wrapper:e}=i.components||{};return e?(0,n.jsx)(e,Object.assign({},i,{children:(0,n.jsx)(o,i)})):o(i)}var P=z;return v(S);})();\\n;return Component;"},"_id":"solid.mdx","_raw":{"sourceFilePath":"solid.mdx","sourceFileName":"solid.mdx","sourceFileDir":".","contentType":"mdx","flattenedPath":"solid"},"type":"Post","url":"/posts/solid"}]');[...i]},3447:function(e,r,a){a.d(r,{Z:function(){return t}});var i=a(5893),n=a(4412),l=a(1953);function t(){return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.Z,{sx:{marginTop:3}}),(0,i.jsx)(l.Z,{my:2,sx:{display:"flex",justifyContent:"flex-end",fontSize:"small",color:"var(--c2)"},children:"\xa92023 mujdecisy."})]})}},8069:function(e,r,a){a.d(r,{Z:function(){return o}});var i=a(5893),n=a(9918),l=a(4548),t=a(1953),u=a(1664),s=a.n(u);function o(e){let{item:r}=e;return(0,i.jsx)(n.ZP,{alignItems:"flex-start",children:(0,i.jsx)(l.Z,{primary:(0,i.jsxs)(t.Z,{sx:{display:"flex",alignItems:"end",justifyContent:"space-between"},children:[(0,i.jsx)(t.Z,{sx:{overflow:"hidden",whiteSpace:"nowrap",textOverflow:"ellipsis"},children:(0,i.jsx)(s(),{href:r.url,children:r.title})}),(0,i.jsxs)(t.Z,{sx:{display:"flex",justifyContent:"end",fontSize:"0.8rem",fontWeight:"200",textAlign:"end",width:"70px"},children:[r.date,(0,i.jsx)(t.Z,{sx:{width:"3px",height:"20px",marginLeft:"5px"}})]})]}),secondary:r.summary})})}},6375:function(e,r,a){a.d(r,{yx:function(){return t}});var i=a(8009),n=a(6625);let l=(0,i.ZF)({apiKey:"AIzaSyAVw1iVB2Z_qk0B43OB_Q3Fhzu_57LUi5c",authDomain:"mujdecisy-5b7bc.firebaseapp.com",projectId:"mujdecisy-5b7bc",storageBucket:"mujdecisy-5b7bc.appspot.com",messagingSenderId:"510162980404",appId:"1:510162980404:web:e236e7cd7c3602d6968461",measurementId:"G-BVWXLCDH9E"});function t(e){let r=(0,n.IH)(l);r&&(0,n.Kz)(r,"visit",{app:"mujdeci-blog",page:e})}}}]);